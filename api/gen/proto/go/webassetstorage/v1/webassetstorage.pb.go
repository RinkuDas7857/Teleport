// Copyright 2023 Gravitational, Inc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: teleport/webassetstorage/v1/webassetstorage.proto

package webassetstorage

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Status is the current status of the service, specifying if it is ready to upload, initializing
// the service, or not supported/enabled.
type Status int32

const (
	// STATUS_UNSPECIFIED.
	Status_STATUS_UNSPECIFIED Status = 0
	// STATUS_NOT_SUPPORTED is used when a service is not enabled or in an error state.
	Status_STATUS_NOT_SUPPORTED Status = 1
	// STATUS_INITIALIZING is when the service is starting.
	Status_STATUS_INITIALIZING Status = 2
	// STATUS_READY is when the service is ready to accept upload/get requests for files.
	Status_STATUS_READY Status = 3
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_NOT_SUPPORTED",
		2: "STATUS_INITIALIZING",
		3: "STATUS_READY",
	}
	Status_value = map[string]int32{
		"STATUS_UNSPECIFIED":   0,
		"STATUS_NOT_SUPPORTED": 1,
		"STATUS_INITIALIZING":  2,
		"STATUS_READY":         3,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_teleport_webassetstorage_v1_webassetstorage_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_teleport_webassetstorage_v1_webassetstorage_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_teleport_webassetstorage_v1_webassetstorage_proto_rawDescGZIP(), []int{0}
}

// GetWebassetRequest is a request to fetch a file from the webasset storage bucket.
type GetWebassetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name is the name of the file.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetWebassetRequest) Reset() {
	*x = GetWebassetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_webassetstorage_v1_webassetstorage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWebassetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWebassetRequest) ProtoMessage() {}

func (x *GetWebassetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_webassetstorage_v1_webassetstorage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWebassetRequest.ProtoReflect.Descriptor instead.
func (*GetWebassetRequest) Descriptor() ([]byte, []int) {
	return file_teleport_webassetstorage_v1_webassetstorage_proto_rawDescGZIP(), []int{0}
}

func (x *GetWebassetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// GetWebassetResponse contains the filename and compressed byte content of the requested file.
type GetWebassetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name is the name of the file.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// content is the compressed byte content of the file.
	Content []byte `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *GetWebassetResponse) Reset() {
	*x = GetWebassetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_webassetstorage_v1_webassetstorage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWebassetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWebassetResponse) ProtoMessage() {}

func (x *GetWebassetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_webassetstorage_v1_webassetstorage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWebassetResponse.ProtoReflect.Descriptor instead.
func (*GetWebassetResponse) Descriptor() ([]byte, []int) {
	return file_teleport_webassetstorage_v1_webassetstorage_proto_rawDescGZIP(), []int{1}
}

func (x *GetWebassetResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetWebassetResponse) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

// UploadWebassetRequest is a request to upload a file to configured storage bucket.
type UploadWebassetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name is the name of the file.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// content is the compressed byte content of the file.
	Content []byte `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *UploadWebassetRequest) Reset() {
	*x = UploadWebassetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_webassetstorage_v1_webassetstorage_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadWebassetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadWebassetRequest) ProtoMessage() {}

func (x *UploadWebassetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_webassetstorage_v1_webassetstorage_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadWebassetRequest.ProtoReflect.Descriptor instead.
func (*UploadWebassetRequest) Descriptor() ([]byte, []int) {
	return file_teleport_webassetstorage_v1_webassetstorage_proto_rawDescGZIP(), []int{2}
}

func (x *UploadWebassetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UploadWebassetRequest) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

// GetWebassetStorageStatusRequest is a request for the webasset storage status.
type GetWebassetStorageStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetWebassetStorageStatusRequest) Reset() {
	*x = GetWebassetStorageStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_webassetstorage_v1_webassetstorage_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWebassetStorageStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWebassetStorageStatusRequest) ProtoMessage() {}

func (x *GetWebassetStorageStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_webassetstorage_v1_webassetstorage_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWebassetStorageStatusRequest.ProtoReflect.Descriptor instead.
func (*GetWebassetStorageStatusRequest) Descriptor() ([]byte, []int) {
	return file_teleport_webassetstorage_v1_webassetstorage_proto_rawDescGZIP(), []int{3}
}

// GetWebassetStorageStatusResponse is a response for the webasset storage status.
type GetWebassetStorageStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// status is the current status of the webasset storage service.
	Status Status `protobuf:"varint,1,opt,name=status,proto3,enum=teleport.webassetstorage.v1.Status" json:"status,omitempty"`
}

func (x *GetWebassetStorageStatusResponse) Reset() {
	*x = GetWebassetStorageStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_webassetstorage_v1_webassetstorage_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWebassetStorageStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWebassetStorageStatusResponse) ProtoMessage() {}

func (x *GetWebassetStorageStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_webassetstorage_v1_webassetstorage_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWebassetStorageStatusResponse.ProtoReflect.Descriptor instead.
func (*GetWebassetStorageStatusResponse) Descriptor() ([]byte, []int) {
	return file_teleport_webassetstorage_v1_webassetstorage_proto_rawDescGZIP(), []int{4}
}

func (x *GetWebassetStorageStatusResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_STATUS_UNSPECIFIED
}

// GetUploadWebassetKeysRequest is a request to list the keys of all currently uploaded objects.
type GetUploadedWebassetKeysRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetUploadedWebassetKeysRequest) Reset() {
	*x = GetUploadedWebassetKeysRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_webassetstorage_v1_webassetstorage_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUploadedWebassetKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUploadedWebassetKeysRequest) ProtoMessage() {}

func (x *GetUploadedWebassetKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_webassetstorage_v1_webassetstorage_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUploadedWebassetKeysRequest.ProtoReflect.Descriptor instead.
func (*GetUploadedWebassetKeysRequest) Descriptor() ([]byte, []int) {
	return file_teleport_webassetstorage_v1_webassetstorage_proto_rawDescGZIP(), []int{5}
}

// GetWebassetResponse
// GetUploadedWebassetKeysREsponse is a response that contains all the currently uploaded object keys.
type GetUploadedWebassetKeysResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// keys is a list of all the currently uploaded keys.
	Keys []string `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *GetUploadedWebassetKeysResponse) Reset() {
	*x = GetUploadedWebassetKeysResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teleport_webassetstorage_v1_webassetstorage_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUploadedWebassetKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUploadedWebassetKeysResponse) ProtoMessage() {}

func (x *GetUploadedWebassetKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teleport_webassetstorage_v1_webassetstorage_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUploadedWebassetKeysResponse.ProtoReflect.Descriptor instead.
func (*GetUploadedWebassetKeysResponse) Descriptor() ([]byte, []int) {
	return file_teleport_webassetstorage_v1_webassetstorage_proto_rawDescGZIP(), []int{6}
}

func (x *GetUploadedWebassetKeysResponse) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

var File_teleport_webassetstorage_v1_webassetstorage_proto protoreflect.FileDescriptor

var file_teleport_webassetstorage_v1_webassetstorage_proto_rawDesc = []byte{
	0x0a, 0x31, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x77, 0x65, 0x62, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x65,
	0x62, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x77, 0x65,
	0x62, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x28, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x57, 0x65, 0x62, 0x61, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x43, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x57, 0x65,
	0x62, 0x61, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x45, 0x0a, 0x15,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x57, 0x65, 0x62, 0x61, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x22, 0x21, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x57, 0x65, 0x62, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5f, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x57, 0x65, 0x62,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x74, 0x65, 0x6c,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x77, 0x65, 0x62, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x20, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x57, 0x65, 0x62, 0x61, 0x73, 0x73, 0x65, 0x74, 0x4b, 0x65,
	0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x35, 0x0a, 0x1f, 0x47, 0x65, 0x74,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x57, 0x65, 0x62, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73,
	0x2a, 0x65, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a,
	0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x52, 0x45, 0x41, 0x44, 0x59, 0x10, 0x03, 0x32, 0x99, 0x04, 0x0a, 0x16, 0x57, 0x65, 0x62, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x94, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x65, 0x64, 0x57, 0x65, 0x62, 0x61, 0x73, 0x73, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x3b,
	0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x77, 0x65, 0x62, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x57, 0x65, 0x62, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x74, 0x65,
	0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x77, 0x65, 0x62, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x65, 0x64, 0x57, 0x65, 0x62, 0x61, 0x73, 0x73, 0x65, 0x74, 0x4b, 0x65, 0x79,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x70, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x57, 0x65, 0x62, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x2f, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x77, 0x65, 0x62, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x65, 0x62, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x74, 0x65, 0x6c, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x2e, 0x77, 0x65, 0x62, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x65, 0x62, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x0e, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x57, 0x65, 0x62, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x32, 0x2e,
	0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x77, 0x65, 0x62, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x57, 0x65, 0x62, 0x61, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x97, 0x01, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x57, 0x65, 0x62, 0x61, 0x73, 0x73, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3c, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x77, 0x65, 0x62, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x65, 0x62, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x77, 0x65, 0x62, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x65, 0x62, 0x61, 0x73, 0x73, 0x65, 0x74, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x57, 0x5a, 0x55, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x2f,
	0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x77, 0x65, 0x62, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x77, 0x65, 0x62,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_teleport_webassetstorage_v1_webassetstorage_proto_rawDescOnce sync.Once
	file_teleport_webassetstorage_v1_webassetstorage_proto_rawDescData = file_teleport_webassetstorage_v1_webassetstorage_proto_rawDesc
)

func file_teleport_webassetstorage_v1_webassetstorage_proto_rawDescGZIP() []byte {
	file_teleport_webassetstorage_v1_webassetstorage_proto_rawDescOnce.Do(func() {
		file_teleport_webassetstorage_v1_webassetstorage_proto_rawDescData = protoimpl.X.CompressGZIP(file_teleport_webassetstorage_v1_webassetstorage_proto_rawDescData)
	})
	return file_teleport_webassetstorage_v1_webassetstorage_proto_rawDescData
}

var file_teleport_webassetstorage_v1_webassetstorage_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_teleport_webassetstorage_v1_webassetstorage_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_teleport_webassetstorage_v1_webassetstorage_proto_goTypes = []interface{}{
	(Status)(0),                              // 0: teleport.webassetstorage.v1.Status
	(*GetWebassetRequest)(nil),               // 1: teleport.webassetstorage.v1.GetWebassetRequest
	(*GetWebassetResponse)(nil),              // 2: teleport.webassetstorage.v1.GetWebassetResponse
	(*UploadWebassetRequest)(nil),            // 3: teleport.webassetstorage.v1.UploadWebassetRequest
	(*GetWebassetStorageStatusRequest)(nil),  // 4: teleport.webassetstorage.v1.GetWebassetStorageStatusRequest
	(*GetWebassetStorageStatusResponse)(nil), // 5: teleport.webassetstorage.v1.GetWebassetStorageStatusResponse
	(*GetUploadedWebassetKeysRequest)(nil),   // 6: teleport.webassetstorage.v1.GetUploadedWebassetKeysRequest
	(*GetUploadedWebassetKeysResponse)(nil),  // 7: teleport.webassetstorage.v1.GetUploadedWebassetKeysResponse
	(*emptypb.Empty)(nil),                    // 8: google.protobuf.Empty
}
var file_teleport_webassetstorage_v1_webassetstorage_proto_depIdxs = []int32{
	0, // 0: teleport.webassetstorage.v1.GetWebassetStorageStatusResponse.status:type_name -> teleport.webassetstorage.v1.Status
	6, // 1: teleport.webassetstorage.v1.WebassetStorageService.GetUploadedWebassetKeys:input_type -> teleport.webassetstorage.v1.GetUploadedWebassetKeysRequest
	1, // 2: teleport.webassetstorage.v1.WebassetStorageService.GetWebasset:input_type -> teleport.webassetstorage.v1.GetWebassetRequest
	3, // 3: teleport.webassetstorage.v1.WebassetStorageService.UploadWebasset:input_type -> teleport.webassetstorage.v1.UploadWebassetRequest
	4, // 4: teleport.webassetstorage.v1.WebassetStorageService.GetWebassetStorageStatus:input_type -> teleport.webassetstorage.v1.GetWebassetStorageStatusRequest
	7, // 5: teleport.webassetstorage.v1.WebassetStorageService.GetUploadedWebassetKeys:output_type -> teleport.webassetstorage.v1.GetUploadedWebassetKeysResponse
	2, // 6: teleport.webassetstorage.v1.WebassetStorageService.GetWebasset:output_type -> teleport.webassetstorage.v1.GetWebassetResponse
	8, // 7: teleport.webassetstorage.v1.WebassetStorageService.UploadWebasset:output_type -> google.protobuf.Empty
	5, // 8: teleport.webassetstorage.v1.WebassetStorageService.GetWebassetStorageStatus:output_type -> teleport.webassetstorage.v1.GetWebassetStorageStatusResponse
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_teleport_webassetstorage_v1_webassetstorage_proto_init() }
func file_teleport_webassetstorage_v1_webassetstorage_proto_init() {
	if File_teleport_webassetstorage_v1_webassetstorage_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_teleport_webassetstorage_v1_webassetstorage_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWebassetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_webassetstorage_v1_webassetstorage_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWebassetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_webassetstorage_v1_webassetstorage_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadWebassetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_webassetstorage_v1_webassetstorage_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWebassetStorageStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_webassetstorage_v1_webassetstorage_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWebassetStorageStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_webassetstorage_v1_webassetstorage_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUploadedWebassetKeysRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teleport_webassetstorage_v1_webassetstorage_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUploadedWebassetKeysResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_teleport_webassetstorage_v1_webassetstorage_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_teleport_webassetstorage_v1_webassetstorage_proto_goTypes,
		DependencyIndexes: file_teleport_webassetstorage_v1_webassetstorage_proto_depIdxs,
		EnumInfos:         file_teleport_webassetstorage_v1_webassetstorage_proto_enumTypes,
		MessageInfos:      file_teleport_webassetstorage_v1_webassetstorage_proto_msgTypes,
	}.Build()
	File_teleport_webassetstorage_v1_webassetstorage_proto = out.File
	file_teleport_webassetstorage_v1_webassetstorage_proto_rawDesc = nil
	file_teleport_webassetstorage_v1_webassetstorage_proto_goTypes = nil
	file_teleport_webassetstorage_v1_webassetstorage_proto_depIdxs = nil
}
